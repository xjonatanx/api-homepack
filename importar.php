<?php
    require __DIR__ . '/vendor/autoload.php';
    include "./phpqrcode/qrlib.php";
    include("../api-yitp/conn.php");
    use Picqer\Barcode\BarcodeGeneratorPNG;
    
    //Verifying the Signature
    $recievedJwt = $_GET['token'];
    $secret_key = 'HOMEPACKYITP2020';
    // Split a string by '.' 
    $jwt_values = explode('.', $recievedJwt);
    // extracting the signature from the original JWT 
    $recieved_signature = $jwt_values[2];
    // concatenating the first two arguments of the $jwt_values array, representing the header and the payload
    $recievedHeaderAndPayload = $jwt_values[0] . '.' . $jwt_values[1];
    // creating the Base 64 encoded new signature generated by applying the HMAC method to the concatenated header and payload values
    $resultedsignature = base64_encode(hash_hmac('sha256', $recievedHeaderAndPayload, $secret_key, true));
    // checking if the created signature is equal to the received signature
    $recieved_signature = str_replace(" ", "+", $recieved_signature);
    if($resultedsignature == $recieved_signature) {
    
        $ciudades = [
                "Valparaiso" => '1',
                "Concon" => '2',
                "Puchuncavi" => '3',
                "Quintero" => '4',
                "Viña del Mar" => '5',
                "Quilpue" => '6',
                "Villa Alemana" => '7',
                "Peña Blanca" => '8',
                "Limache" => '9',
                "Olmue" => '10',
                "Quillota" => '11',
                "La cruz" => '12',
                "La calera" => '13',
                "Nogales" => '14',
                "Hijuelas" => '15',
                "La ligua" => '16',
                "Papudo" => '17',
                "Cabildo" => '18',
                "Los Andes" => '19',
                "San Felipe" => '20',
                "Llay Llay" => '21',
                "Panquehue" => '22',
                "San Antonio" => '23',
                "Algarrobo" => '24',
                "Cartagena" => '25',
                "El Quisco" => '26',
                "El Tabo" => '27',
                "Santo Domingo" => '28',
                "Santiago" => '29'
            ];
        $allowed_extension = array('xls', 'xlsx');
        $file_array = explode(".", $_FILES["file"]["name"]);
        $file_extension = end($file_array);
        if(in_array($file_extension, $allowed_extension))
        {
            $xlsx = new SimpleXLSX($_FILES['file']['tmp_name']); // try...catch
            if ( $xlsx->success() ) {
                $total_pago = 0;
                $id_usuario = $_POST["id_usuario"];
                $orden_compra = uniqid();
                
                foreach ($xlsx->rows() as $index => $valor) {
            	    if($index !== 0) {
            	        
            	        if(
            	            isset($ciudades[$valor[0]]) == false || 
            	            isset($ciudades[$valor[1]]) == false || 
            	            isset($valor[2]) == false || 
            	            isset($valor[3]) == false || 
            	            isset($valor[4]) == false || 
            	            isset($valor[5]) == false || 
            	            isset($valor[6]) == false || 
            	            isset($valor[7]) == false || 
            	            isset($valor[8]) == false || 
            	            isset($valor[9]) == false || 
            	            isset($valor[10]) == false || 
            	            isset($valor[11]) == false|| 
            	            isset($valor[12]) == false || 
            	            isset($valor[13]) == false|| 
            	            isset($valor[14]) == false 
            	        ) {
                            $myObj->status = 0;
                            $myObj->mesagge = "El documento tiene campos incorrectos, para continuar debe corregirlos e intentarlo nuevamente.";
                            $myJSON = json_encode($myObj);
                            echo $myJSON;
                            die;
            	        }
            	        
            	        $bultos = $valor[14];
            	        
            	        for ($x = 0; $x < $bultos; $x++) {
            	            $total_pago = $total_pago + 4000;
            	        }
            	    }
                }
                
                
                
                $sql = "INSERT INTO pagos (orden_compra, data, estado, total, created_at, fk_id_usuario, transaction) VALUES ('$orden_compra', null, 'pendiente', $total_pago, NOW(), $id_usuario, null)";
                        
                if (!$conn -> query($sql)) {
                  $myObj->status = 0;
                    $myObj->mesagge = $conn -> error;
                    $myJSON = json_encode($myObj);
                    echo $myJSON;
                  die;
                }
                
                $last_id = mysqli_insert_id($conn);
                
        
                foreach ($xlsx->rows() as $index => $valor) {
            	    if($index !== 0) {
            	        $direccion = $valor[11];
                        $rut = $valor[7];
                        $nombre = $valor[8];
                        $telefono = $valor[9];
                        $email = $valor[10];
                        $detalle = $valor[12];
                        $total = 4000;
                        $origen = $ciudades[$valor[0]];
                        $destino = $ciudades[$valor[1]];
                        $peso = null;
                        $referencia = $valor[13];
                        $rut_remitente = $valor[2];
                        $nombre_remitente = $valor[3];
                        $telefono_remitente = $valor[4];
                        $email_remitente = $valor[5];
                        $direccion_remitente = $valor[6];
                        $bultos = $valor[14];
                        
                        for ($x = 0; $x < $bultos; $x++) {
                            $uid = hexdec( uniqid() );
                            
                        	//Declaramos una carpeta temporal para guardar la imagenes generadas
                        	$dir = dirname(__DIR__).'/khipu/temp/';
                        	
                        	//Si no existe la carpeta la creamos
                        	if (!file_exists($dir))
                                mkdir($dir);
                        	
                            //Declaramos la ruta y nombre del archivo a generar
                        	$filename = $dir.$uid.'.png';
                         
                            //Parametros de Condiguración
                        	
                        	$tamaño = 10; //Tamaño de Pixel
                        	$level = 'L'; //Precisión Baja
                        	$framSize = 3; //Tamaño en blanco
                        	$contenido = $uid; //Texto
                        	
                                //Enviamos los parametros a la Función para generar código QR 
                        	QRcode::png($contenido, $filename, $level, $tamaño, $framSize); 
                        	
                        	$qr = 'temp/'.$uid.'.png';;
                        	
                        	// BARCODE
                        	# Crear generador
                            $generador = new BarcodeGeneratorPNG();
                            # Ajustes
                            $texto = $contenido;
                            $tipo = $generador::TYPE_CODE_128;
                            $imagen = $generador->getBarcode($texto, $tipo);
                            # Aquí se guarda la imagen
                            $nombreArchivo = $contenido.".png";
                            # Escribir los datos
                            $dir_to_save = dirname(__DIR__)."/khipu/barcode/";
                            if (!is_dir($dir_to_save)) {
                              mkdir($dir_to_save);
                            }
                            file_put_contents($dir_to_save.$nombreArchivo, $imagen);
                        	// END BARCODE
                            
                            $sql = "
                            INSERT INTO despachos (rut_destinatario, nombre_destinatario, telefono_destinatario, email_destinatario, fecha_ingreso, detalle, numero_seguimiento, total, origen, destino, id_usuario, peso, orden_compra, qr, referencia, direccion, rut_remitente, nombre_remitente, telefono_remitente, email_remitente, direccion_remitente, retirado, barcode, id_pago) 
                            VALUES ('$rut', '$nombre', '$telefono', '$email', NOW(), '$detalle', '$uid', '$total', $origen, $destino, $id_usuario, '$peso', '$orden_compra', '$qr', '$referencia', '$direccion', '$rut_remitente', '$nombre_remitente', '$telefono_remitente', '$email_remitente', '$direccion_remitente', 0, '".'barcode/'.$nombreArchivo."', $last_id);";
                                
                            if (!$conn -> query($sql)) {
                              $myObj->status = 0;
                                $myObj->mesagge = $conn -> error;
                                $myJSON = json_encode($myObj);
                                echo $myJSON;
                              die;
                            }
                            
                            $estado = "ORDEN DE TRANSPORTE CREADA";
                            $fk_id_despacho = mysqli_insert_id($conn);
            
                            $sql = "INSERT INTO seguimiento (fecha, estado, detalle, foto, fk_id_despacho, nombre_recepcion, apellido_recepcion, rut_recepcion) VALUES (NOW(), '$estado', null, null, $fk_id_despacho, null, null, null)";
                            
                            if (!$conn -> query($sql)) {
                              $myObj->status = 0;
                                $myObj->mesagge = $conn -> error;
                                $myJSON = json_encode($myObj);
                                echo $myJSON;
                              die;
                            }
                        }
            	    }
            	}
            	$conn->close();
                $myObj->status = 1;
                $myObj->mesagge = "Despachos registrados correctamente.";
                $myJSON = json_encode($myObj);
                echo $myJSON;
            } else {
            	echo 'xlsx error: '.$xlsx->error();
            }
        } else {
            $conn->close();
            $myObj->status = 0;
            $myObj->mesagge = "La extención del archivo no es válida.";
            $myJSON = json_encode($myObj);
            echo $myJSON;
        }
        
    } else {
        echo "No permitido";
    }
            
?>